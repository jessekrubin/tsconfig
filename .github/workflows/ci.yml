name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip-ci')"
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        node-version:
          - 20.x
          # - 18.x
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: pnpm-store-dir
        id: pnpm-store-dir
        shell: bash
        run: |
          echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: pnpm-cache-setup
        id: pnpm-cache-setup
        env:
          cache-name: cache-pnpm-store
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.node-version }}-
            ${{ env.cache-name }}-${{ runner.os }}-
            ${{ env.cache-name }}-

      - name: pnpm-install
        id: pnpm-install
        run: pnpm i

      - name: build
        run: pnpm build

      - name: test
        run: pnpm test

      - name: lint
        run: pnpm lint

      - name: fmt-check
        run: pnpm fmtc
  # release:
  #   runs-on: ubuntu-latest
  #   needs: ["test"]
  #   if: "!contains(github.event.head_commit.message, 'skip-release') && !contains(github.event.head_commit.message, 'skip-ci') && github.event_name != 'pull_request'"
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: lts/*
  #     - name: Cache ~/.pnpm-store
  #       uses: actions/cache@v4
  #       env:
  #         cache-name: cache-pnpm-store
  #       with:
  #         path: ~/.pnpm-store
  #         key: ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-
  #           ${{ runner.os }}-${{ matrix.node-version }}-release-
  #           ${{ runner.os }}-
  #     - run: npm i -g pnpm
  #     - run: pnpm i
  #     - run: pnpm dlx semantic-release@20 --branches main
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
